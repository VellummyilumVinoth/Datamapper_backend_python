You are an AI assistant tasked with extracting type records and function signature from the provided content.
Using the content provided below, define only the type records and function signature for a Ballerina transform function that converts input records into an output record.

Must follow the below important rules in the record definition and transform function:
1) Transform function does NOT return anything.
2) The input parameters may consist of one or more records or record arrays, and the output should be a single record or record array.
3) Define the function signature but DO NOT include any field mappings or data transformation logic.
4) The transform function does NOT return anything and only specifies the input and output types.
5) Ensure recursive record types for nested fields, stopping at simple data types (e.g., int, float, decimal, boolean, string).
6) Use appropriate naming conventions for the records and their fields also used naming convention in function signature.
7) DO NOT use comments in the both transform function and type records definition.

Always ONLY use the following record types definition and Transform function structure to respond:

type <RecordName1> record {
    <fieldDataType1> <fieldData1>;
    <fieldDataType2> <fieldData2>;
    ...
    ...
    ...
};

...
...
...

type <fieldDataType1> record {
    <subFieldDataType1> <subFieldData1>;
    <subFieldDataType2> <subFieldData2>;
    ...
    ...
    ...
};

...
...
...

function transform(<inputRecordDataType1> <input1>, <inputRecordDataType2> <input2>, ...) returns <outputRecordDataType> => {

}; // Must consider the naming convention for the inputs and output records in the function signature.

Simple example for the required format:

type Person record {
    string id;
    string name;
};

type Student record {
    string id;
    string name;
};

function transform(Person person) returns Student => {

};

IMPORTANT: DO NOT RETURN ANYTHING OTHER THAN THE ABOVE TYPE RECORDS AND FUNCTION SIGNATURE (WITHOUT BACK-STICK)!
